variables:
  IMAGE_TAG: $CI_COMMIT_REF_NAME
  DOCKER_IMAGE_BACKEND: "$DOCKERHUB_USERNAME/back-right-backend"
  DOCKER_IMAGE_FRONTEND: "$DOCKERHUB_USERNAME/back-right-frontend"
  DOCKER_IMAGE_PROXY: "$DOCKERHUB_USERNAME/back-right-proxy"
  DOCKER_HOST: "tcp://docker:2375"

stages:
  - build
  - push
  - deploy

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan i12a601.p.ssafy.io >> ~/.ssh/known_hosts
  - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
  - docker run --privileged -d --name dind --network=host docker:20.10.24-dind  # 직접 실행
  - sleep 10  # Docker Daemon이 실행될 시간을 확보
  - docker info  # Docker Daemon이 정상적으로 실행되는지 확인

build:
  stage: build
  script:
    - docker build -t $DOCKER_IMAGE_BACKEND:$IMAGE_TAG ./backend
    - docker build -t $DOCKER_IMAGE_FRONTEND:$IMAGE_TAG ./frontend
    - docker build -t $DOCKER_IMAGE_PROXY:$IMAGE_TAG ./nginx

push:
  stage: push
  script:
    - docker push $DOCKER_IMAGE_BACKEND:$IMAGE_TAG
    - docker push $DOCKER_IMAGE_FRONTEND:$IMAGE_TAG
    - docker push $DOCKER_IMAGE_PROXY:$IMAGE_TAG
deploy:
  stage: deploy
  only:
    - main  # main 브랜치에 push될 때만 배포 실행
    - feature/ci-cd
  script:
    - ssh ubuntu@$SERVER_HOST << 'EOF'
      cd deploy
      docker-compose down
      docker pull $DOCKER_IMAGE_BACKEND:$IMAGE_TAG
      docker pull $DOCKER_IMAGE_FRONTEND:$IMAGE_TAG
      docker pull $DOCKER_IMAGE_PROXY:$IMAGE_TAG
      docker-compose up -d
      EOF
    