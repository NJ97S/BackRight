services:
  proxy:
    image: tonixx/back-right-proxy
    container_name: proxy
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - letsencrypt:/etc/letsencrypt # ✅ 기존 인증서 유지
      - nginx_config:/etc/nginx
    restart: always
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    env_file:
      - ./nginx/.env

  mysql:
    image: mysql:8.0
    container_name: mysql-container
    env_file:
      - backend/.env
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 10s
      retries: 10

  redis:
    image: redis:latest
    container_name: redis-container
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis_data:/data

  backend:
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    image: tonixx/back-right-backend
    container_name: backend
    env_file:
      - backend/.env
    networks:
      - app-network

  frontend:
    image: tonixx/back-right-frontend
    container_name: frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  letsencrypt:
  nginx_config:
